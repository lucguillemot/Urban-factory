install.packages("swirl")
library('swirl')
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x <-9
ls()
dir()
'list.files'
?list.files
args()
args(list.files)
old.dir <-getwd()
dir.create(testdir)
dir.create('testdir')
setwd(testdir)
setwd('testdir')
file.create('mytest.R')
ls()
list.files()
file.exists('mytest.R')
file.info('mytest.R')
file.rename('mytest.R', 'mytest2.R')
file.copy('mytest2.R', 'mytest3.R')
play()
list.files()
nxt()
file.path('mytest3.R')
args(file.path)
file.path('folder1', 'folder2')
?dir.create
play()
list.files()
list.dirs()
list.dir()
nxt()
dir.create('testdir2', 'testdir3', recursive=TRUE)
dir.create(file.path('testdir2', 'testdir3'), recursive=TRUE)
unlink('testdir2', recursive=TRUE)
setwd(old.dir)
unlink('testdir', recursive=TRUE)
1:20
pi:10
15:1
?´:´
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.ny(x)&x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect <- c(11,2,NA)
vect2 <- c(11,2,NA)
vect <- c(foo=11, bar=2, norf=NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
q()
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
as.list(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
cls_vect
class(cls_vect)
sum(flag$orange)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(unique_vals, length)
sapply(unique_vals, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
str(flags)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
my_vector <- 1:"0"
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_vector <- my_matrix
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames, my_data)
?colnames
my_data <- colnames(cnames)
colnames(my_data) <- cnames
my_data
exit()
q()
head(melted)
cities <- read.csv("cities_geo.csv")
cities <- select(cities, -(lat:long))
cities <- select(cities, -(rank:city))
melted <- melt(cities, id.vars=c("code"), variable.name="year", value.name = "population")
str(melted)
melted <- arrange(melted, code)
splitted <- split(melted, melted$code)
write(toJSON(splitted, na="null", pretty=TRUE),file="places/cities_chart.json")
setwd("~/Sites/_maps/02_Cities/geo/151011")
cities <- read.csv("cities_geo.csv")
cities <- select(cities, -(lat:long))
cities <- select(cities, -(rank:city))
melted <- melt(cities, id.vars=c("code"), variable.name="year", value.name = "population")
str(melted)
melted <- arrange(melted, code)
splitted <- split(melted, melted$code)
write(toJSON(splitted, na="null", pretty=TRUE),file="places/cities_chart.json")
library(dplyr)
library(reshape2)
library(jsonlite)
cities <- read.csv("cities_geo.csv")
cities <- select(cities, -(lat:long))
cities <- select(cities, -(rank:city))
melted <- melt(cities, id.vars=c("code"), variable.name="year", value.name = "population")
str(melted)
melted <- arrange(melted, code)
splitted <- split(melted, melted$code)
write(toJSON(splitted, na="null", pretty=TRUE),file="places/cities_chart.json")
head(melted)
splitted[[1]]
head(cities)
?melt
library(dplyr)
library(reshape2)
library(jsonlite)
cities <- read.csv("cities_geo.csv")
cities <- select(cities, -(lat:long))
cities <- select(cities, -(rank:city))
melted <- melt(cities, id.vars=c("code"), as.is = FALSE, variable.name="year", value.name = "population")
str(melted)
melted <- arrange(melted, code)
splitted <- split(melted, melted$code)
write(toJSON(splitted, na="null", pretty=TRUE),file="places/cities_chart.json")
head(melted)
?lapply
splitted2 <- lapply(splitted, function(x, i) x[[i]][[1]]<-null)
splitted2 <- lapply(splitted, function(x, i) x[[i]][[1]]<-0)
splitted2 <- lapply(splitted, function(x, i) x[[i]][[1]]<-NULL)
splitted[[1]][[1]]<-NULL
head(splitted)
lapply(splitted,"[[",1)
sapply(splitted, "[", 1,1)
?melt
head(melted)
head(cities)
library(dplyr)
library(reshape2)
library(jsonlite)
cities <- read.csv("../cities_geo.csv")
cities <- select(cities, -(lat:long))
cities <- select(cities, -(rank:city))
melted <- melt(cities, id.vars=c("code"), as.is = FALSE, variable.name="year", value.name = "population")
str(melted)
melted <- arrange(melted, code)
splitted <- split(melted, melted$code)
write(toJSON(splitted, na="null", pretty=TRUE),file="places/cities_chart.json")
View(cities)
cities <- read.csv("../cities_geo.csv")
head(cities)
setwd("~/Sites/_maps/UrbanFactory")
library(dplyr)
library(reshape2)
library(jsonlite)
cities <- read.csv("data/cities_geo.csv")
cities <- select(cities, -(lat:long))
cities <- select(cities, -(rank:city))
melted <- melt(cities, id.vars=c("code"), as.is = FALSE, variable.name="year", value.name = "population")
str(melted)
melted <- arrange(melted, code)
splitted <- split(melted, melted$code)
write(toJSON(splitted, na="null", pretty=TRUE),file="data/chart/cities_chart.json")
